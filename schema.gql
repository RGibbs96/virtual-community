# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AuthPayload {
  tokens: TokensPayload!
  user: User!
}

input CreateProfileInput {
  bio: String!
  currentLocation: String!
  fullName: String!
  pronouns: String!
  tdaGradYear: Float!
}

input CreateUserInput {
  email: String!
  fullName: String!
  password: String!
  pronouns: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createProfile(createProfileInput: CreateProfileInput!, userId: Float!): Profile!
  createUser(createUserInput: CreateUserInput!): AuthPayload!
  deleteAccount(id: Float!): Boolean!
  refreshToken(refreshTokenInput: RefreshTokenInput!): TokensPayload!
  resetPassword(input: ResetPasswordInput!): User!
  updateProfile(updateProfileInput: UpdateProfileInput!, userId: Float!): Profile!
}

type Profile {
  bio: String!
  currentLocation: String!
  fullName: String!
  homeCountry: String
  id: Float!
  namePronunciation: String
  nickname: String
  profilePic: String
  pronouns: String!
  tdaGradYear: Float!
  tdaGradYearBannerVisible: Boolean
  userId: Float!
  website: String
}

type Query {
  getProfile(userId: Float!): Profile
  getUser(userId: Float!): User
}

input RefreshTokenInput {
  refreshToken: String!
  userId: Float!
}

input ResetPasswordInput {
  email: String!
  newPassword: String!
}

type TokensPayload {
  accessToken: String!
  refreshToken: String!
}

input UpdateProfileInput {
  bio: String
  currentLocation: String
  fullName: String
  homeCountry: String
  nickname: String
  profilePic: String
  pronouns: String
  tdaGradYear: Float
  tdaGradYearBannerVisible: Boolean
  website: String
}

type User {
  Profile: Profile!
  email: String!
  id: Int!
  isActive: Boolean!
  passwordHash: String!
}